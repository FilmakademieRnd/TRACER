//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.14.0
//     from Assets/TRACER/Core/Managers/InputManager/Inputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

/// <summary>
/// Provides programmatic access to <see cref="InputActionAsset" />, <see cref="InputActionMap" />, <see cref="InputAction" /> and <see cref="InputControlScheme" /> instances defined in asset "Assets/TRACER/Core/Managers/InputManager/Inputs.inputactions".
/// </summary>
/// <remarks>
/// This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified.
/// </remarks>
/// <example>
/// <code>
/// using namespace UnityEngine;
/// using UnityEngine.InputSystem;
///
/// // Example of using an InputActionMap named "Player" from a UnityEngine.MonoBehaviour implementing callback interface.
/// public class Example : MonoBehaviour, MyActions.IPlayerActions
/// {
///     private MyActions_Actions m_Actions;                  // Source code representation of asset.
///     private MyActions_Actions.PlayerActions m_Player;     // Source code representation of action map.
///
///     void Awake()
///     {
///         m_Actions = new MyActions_Actions();              // Create asset object.
///         m_Player = m_Actions.Player;                      // Extract action map object.
///         m_Player.AddCallbacks(this);                      // Register callback interface IPlayerActions.
///     }
///
///     void OnDestroy()
///     {
///         m_Actions.Dispose();                              // Destroy asset object.
///     }
///
///     void OnEnable()
///     {
///         m_Player.Enable();                                // Enable all actions within map.
///     }
///
///     void OnDisable()
///     {
///         m_Player.Disable();                               // Disable all actions within map.
///     }
///
///     #region Interface implementation of MyActions.IPlayerActions
///
///     // Invoked when "Move" action is either started, performed or canceled.
///     public void OnMove(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnMove: {context.ReadValue&lt;Vector2&gt;()}");
///     }
///
///     // Invoked when "Attack" action is either started, performed or canceled.
///     public void OnAttack(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnAttack: {context.ReadValue&lt;float&gt;()}");
///     }
///
///     #endregion
/// }
/// </code>
/// </example>
public partial class @Inputs: IInputActionCollection2, IDisposable
{
    /// <summary>
    /// Provides access to the underlying asset instance.
    /// </summary>
    public InputActionAsset asset { get; }

    /// <summary>
    /// Constructs a new instance.
    /// </summary>
    public @Inputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Inputs"",
    ""maps"": [
        {
            ""name"": ""VPETMap"",
            ""id"": ""8cc45c96-8744-4e65-a250-74d6bef146fe"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""Value"",
                    ""id"": ""b48a59d7-3b11-4d2b-afe3-1044fd9f54c6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""Value"",
                    ""id"": ""2849e90e-27c2-40fc-a527-5d8dc8c17120"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""aaa7ebd1-bb7d-4e74-95f8-3ed939d14844"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Position"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3c39c183-85d3-4bc6-a1b1-a648ca158568"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c60f0eb5-f4f4-48c0-a545-1b9951e44d13"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tap"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9523916c-5742-4565-84c9-3c2af598c1df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""cbab1f1a-130f-4b7b-98f3-53112a3532fc"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""OrbitClick"",
                    ""type"": ""Button"",
                    ""id"": ""a950519f-0476-42db-83cd-857c420abf2e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DragClick"",
                    ""type"": ""Button"",
                    ""id"": ""d0d60628-4b7a-45b7-9566-8f68e73cc8fb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ZoomWheel"",
                    ""type"": ""Value"",
                    ""id"": ""40f8c425-a372-4fd3-bb25-b215531abf9b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Controller_North"",
                    ""type"": ""Button"",
                    ""id"": ""4b3b03eb-ea23-4db6-a494-85f3d376c061"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Controller_South"",
                    ""type"": ""Button"",
                    ""id"": ""a4aa1307-43a9-48fd-b194-df207465d766"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Controller_East"",
                    ""type"": ""Button"",
                    ""id"": ""e0fe635c-4ffe-4e5d-a9fe-b7f59facf37e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Controller_West"",
                    ""type"": ""Button"",
                    ""id"": ""f934035e-33a2-48cc-ac1e-dde23b49734e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Controller_Up"",
                    ""type"": ""Button"",
                    ""id"": ""29393c9b-2cb4-4331-9a5f-dc76939c36d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Controller_Down"",
                    ""type"": ""Button"",
                    ""id"": ""9be85056-b6c1-4c0d-a503-13e15f76f14c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Controller_Left"",
                    ""type"": ""Button"",
                    ""id"": ""dab6d547-8df4-477f-8a74-877354e21f05"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Controller_Right"",
                    ""type"": ""Button"",
                    ""id"": ""a16a276a-6c17-48bf-8691-0795bf6797ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Controller_Left_Trigger"",
                    ""type"": ""Button"",
                    ""id"": ""bf109bae-7ae8-4aae-a4ec-6799dede3467"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Controller_Right_Trigger"",
                    ""type"": ""Button"",
                    ""id"": ""9e2a419a-dc73-4fb0-a421-847721028a72"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Controller_Left_Shoulder"",
                    ""type"": ""Button"",
                    ""id"": ""b9eae21c-7390-4ee4-9b42-21d240bb79d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Controller_Right_Shoulder"",
                    ""type"": ""Button"",
                    ""id"": ""7ea99cd4-06e7-41e8-928c-02ab555c0689"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Controller_Left_Stick"",
                    ""type"": ""Value"",
                    ""id"": ""82115d1b-d9f8-4926-8857-6460d26e82cb"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Controller_Right_Stick"",
                    ""type"": ""Value"",
                    ""id"": ""ce9f2dde-4df1-498f-bde9-b3bee002100b"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4fc21893-c29a-424f-9d7f-f6490366ec48"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""e1d85f92-3258-4f58-83ee-1fb209f2c798"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""eafd8b7a-d5bb-4f71-8d7d-5c6358ed6c96"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dabbab34-77d1-44c5-b4f5-2d48e204c2da"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d0cd3da8-78ba-43c2-b6fd-0aafde1f5ff9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""af81361e-6a60-46b3-989f-e919ca47e86b"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""73600b5e-3eee-44df-a600-5ee768cf75bd"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e5310c2c-314c-4ff7-9267-3263ec8c01f5"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c42ab6ff-4d3c-4f92-97cd-c7fd784b6847"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7f5f0c47-1138-47d4-be20-b88bf2c1029d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6b00df6e-eddd-4d30-a6e9-a108e1d3bc7d"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee91648a-bf6d-4efd-a98a-5f0edcc87166"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7643f37-af8b-4aec-ada8-2b5386ba6819"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d031a88-0d48-45c6-939d-1205fcf74ecf"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2618a06d-4a32-45c3-b190-66a20f46e2a6"",
                    ""path"": ""<AttitudeSensor>/attitude"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78fdeaff-2fa2-4c5f-88fb-fe721b7fd3c1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""715b8480-ec4b-444e-befa-a951b749e286"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": ""Tap"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""164fd2fe-3e48-4e7d-bdb9-e8727926afb1"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OrbitClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0570901-3b5b-4bc4-9b01-1e2878c1ad0b"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ead447d8-4a18-4aac-b67e-be197c93d761"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_South"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ce0de03-5768-4bd6-b437-0d811a8f463c"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_South"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1ea4888-f4ec-4be1-894e-7609e65621c9"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_Left_Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a393865-7476-411c-bf32-493f3143cd4f"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_Left_Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6cbe5eed-20d9-455d-807f-7f6d74908cf1"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_North"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60cc8c23-6734-4e8f-a60d-6bbd5fd0bcc0"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_East"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f54e7f19-c284-40cd-ab0a-37f360895bc4"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_West"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b60f6e5e-465a-45c6-8ea4-7c89dd241cd1"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_Right_Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f263e263-a976-4571-9c4c-24cffa679b85"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_Left_Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd19e369-9581-4712-81ab-66556866887e"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_Right_Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d52aede1-975e-4b31-81ba-3c9ea68947bb"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2109727-4512-4c19-8e4b-8a5c9b69c385"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae9a29d7-e95e-4ae7-9ef5-7173d378f1ed"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_Left_Shoulder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e528674a-9509-4d03-bc89-2b9d3ae25359"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_Left_Shoulder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15bc72fe-8434-4af3-a596-d3551db1d9db"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_Right_Shoulder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc3953a1-45ef-47f4-bc0a-b8e2967d1930"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_Right_Shoulder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1419788-1c61-4bb6-8fa3-b61a21c12b2e"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""739bcdef-2af0-4508-83bf-eef6e637c602"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ccf7d75-36d5-4d9a-bf3e-61e43f789123"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Controller_Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Mouse Middle Button"",
                    ""id"": ""47889f83-36e7-492e-b399-74d1c71a50c6"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""8a770c86-b2ba-4140-b585-2e204927cfca"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""8f175c28-0566-4576-bfee-e18a2797558d"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e2fc1bdd-0fbb-4853-b392-35bb06f5d3a6"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DragClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // VPETMap
        m_VPETMap = asset.FindActionMap("VPETMap", throwIfNotFound: true);
        m_VPETMap_Navigate = m_VPETMap.FindAction("Navigate", throwIfNotFound: true);
        m_VPETMap_MiddleClick = m_VPETMap.FindAction("MiddleClick", throwIfNotFound: true);
        m_VPETMap_RightClick = m_VPETMap.FindAction("RightClick", throwIfNotFound: true);
        m_VPETMap_Position = m_VPETMap.FindAction("Position", throwIfNotFound: true);
        m_VPETMap_Click = m_VPETMap.FindAction("Click", throwIfNotFound: true);
        m_VPETMap_Tap = m_VPETMap.FindAction("Tap", throwIfNotFound: true);
        m_VPETMap_Look = m_VPETMap.FindAction("Look", throwIfNotFound: true);
        m_VPETMap_OrbitClick = m_VPETMap.FindAction("OrbitClick", throwIfNotFound: true);
        m_VPETMap_DragClick = m_VPETMap.FindAction("DragClick", throwIfNotFound: true);
        m_VPETMap_ZoomWheel = m_VPETMap.FindAction("ZoomWheel", throwIfNotFound: true);
        m_VPETMap_Controller_North = m_VPETMap.FindAction("Controller_North", throwIfNotFound: true);
        m_VPETMap_Controller_South = m_VPETMap.FindAction("Controller_South", throwIfNotFound: true);
        m_VPETMap_Controller_East = m_VPETMap.FindAction("Controller_East", throwIfNotFound: true);
        m_VPETMap_Controller_West = m_VPETMap.FindAction("Controller_West", throwIfNotFound: true);
        m_VPETMap_Controller_Up = m_VPETMap.FindAction("Controller_Up", throwIfNotFound: true);
        m_VPETMap_Controller_Down = m_VPETMap.FindAction("Controller_Down", throwIfNotFound: true);
        m_VPETMap_Controller_Left = m_VPETMap.FindAction("Controller_Left", throwIfNotFound: true);
        m_VPETMap_Controller_Right = m_VPETMap.FindAction("Controller_Right", throwIfNotFound: true);
        m_VPETMap_Controller_Left_Trigger = m_VPETMap.FindAction("Controller_Left_Trigger", throwIfNotFound: true);
        m_VPETMap_Controller_Right_Trigger = m_VPETMap.FindAction("Controller_Right_Trigger", throwIfNotFound: true);
        m_VPETMap_Controller_Left_Shoulder = m_VPETMap.FindAction("Controller_Left_Shoulder", throwIfNotFound: true);
        m_VPETMap_Controller_Right_Shoulder = m_VPETMap.FindAction("Controller_Right_Shoulder", throwIfNotFound: true);
        m_VPETMap_Controller_Left_Stick = m_VPETMap.FindAction("Controller_Left_Stick", throwIfNotFound: true);
        m_VPETMap_Controller_Right_Stick = m_VPETMap.FindAction("Controller_Right_Stick", throwIfNotFound: true);
    }

    ~@Inputs()
    {
        UnityEngine.Debug.Assert(!m_VPETMap.enabled, "This will cause a leak and performance issues, Inputs.VPETMap.Disable() has not been called.");
    }

    /// <summary>
    /// Destroys this asset and all associated <see cref="InputAction"/> instances.
    /// </summary>
    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindingMask" />
    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.devices" />
    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.controlSchemes" />
    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Contains(InputAction)" />
    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.GetEnumerator()" />
    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    /// <inheritdoc cref="IEnumerable.GetEnumerator()" />
    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Enable()" />
    public void Enable()
    {
        asset.Enable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Disable()" />
    public void Disable()
    {
        asset.Disable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindings" />
    public IEnumerable<InputBinding> bindings => asset.bindings;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindAction(string, bool)" />
    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindBinding(InputBinding, out InputAction)" />
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // VPETMap
    private readonly InputActionMap m_VPETMap;
    private List<IVPETMapActions> m_VPETMapActionsCallbackInterfaces = new List<IVPETMapActions>();
    private readonly InputAction m_VPETMap_Navigate;
    private readonly InputAction m_VPETMap_MiddleClick;
    private readonly InputAction m_VPETMap_RightClick;
    private readonly InputAction m_VPETMap_Position;
    private readonly InputAction m_VPETMap_Click;
    private readonly InputAction m_VPETMap_Tap;
    private readonly InputAction m_VPETMap_Look;
    private readonly InputAction m_VPETMap_OrbitClick;
    private readonly InputAction m_VPETMap_DragClick;
    private readonly InputAction m_VPETMap_ZoomWheel;
    private readonly InputAction m_VPETMap_Controller_North;
    private readonly InputAction m_VPETMap_Controller_South;
    private readonly InputAction m_VPETMap_Controller_East;
    private readonly InputAction m_VPETMap_Controller_West;
    private readonly InputAction m_VPETMap_Controller_Up;
    private readonly InputAction m_VPETMap_Controller_Down;
    private readonly InputAction m_VPETMap_Controller_Left;
    private readonly InputAction m_VPETMap_Controller_Right;
    private readonly InputAction m_VPETMap_Controller_Left_Trigger;
    private readonly InputAction m_VPETMap_Controller_Right_Trigger;
    private readonly InputAction m_VPETMap_Controller_Left_Shoulder;
    private readonly InputAction m_VPETMap_Controller_Right_Shoulder;
    private readonly InputAction m_VPETMap_Controller_Left_Stick;
    private readonly InputAction m_VPETMap_Controller_Right_Stick;
    /// <summary>
    /// Provides access to input actions defined in input action map "VPETMap".
    /// </summary>
    public struct VPETMapActions
    {
        private @Inputs m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public VPETMapActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Navigate".
        /// </summary>
        public InputAction @Navigate => m_Wrapper.m_VPETMap_Navigate;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/MiddleClick".
        /// </summary>
        public InputAction @MiddleClick => m_Wrapper.m_VPETMap_MiddleClick;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/RightClick".
        /// </summary>
        public InputAction @RightClick => m_Wrapper.m_VPETMap_RightClick;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Position".
        /// </summary>
        public InputAction @Position => m_Wrapper.m_VPETMap_Position;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Click".
        /// </summary>
        public InputAction @Click => m_Wrapper.m_VPETMap_Click;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Tap".
        /// </summary>
        public InputAction @Tap => m_Wrapper.m_VPETMap_Tap;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Look".
        /// </summary>
        public InputAction @Look => m_Wrapper.m_VPETMap_Look;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/OrbitClick".
        /// </summary>
        public InputAction @OrbitClick => m_Wrapper.m_VPETMap_OrbitClick;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/DragClick".
        /// </summary>
        public InputAction @DragClick => m_Wrapper.m_VPETMap_DragClick;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/ZoomWheel".
        /// </summary>
        public InputAction @ZoomWheel => m_Wrapper.m_VPETMap_ZoomWheel;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Controller_North".
        /// </summary>
        public InputAction @Controller_North => m_Wrapper.m_VPETMap_Controller_North;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Controller_South".
        /// </summary>
        public InputAction @Controller_South => m_Wrapper.m_VPETMap_Controller_South;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Controller_East".
        /// </summary>
        public InputAction @Controller_East => m_Wrapper.m_VPETMap_Controller_East;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Controller_West".
        /// </summary>
        public InputAction @Controller_West => m_Wrapper.m_VPETMap_Controller_West;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Controller_Up".
        /// </summary>
        public InputAction @Controller_Up => m_Wrapper.m_VPETMap_Controller_Up;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Controller_Down".
        /// </summary>
        public InputAction @Controller_Down => m_Wrapper.m_VPETMap_Controller_Down;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Controller_Left".
        /// </summary>
        public InputAction @Controller_Left => m_Wrapper.m_VPETMap_Controller_Left;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Controller_Right".
        /// </summary>
        public InputAction @Controller_Right => m_Wrapper.m_VPETMap_Controller_Right;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Controller_Left_Trigger".
        /// </summary>
        public InputAction @Controller_Left_Trigger => m_Wrapper.m_VPETMap_Controller_Left_Trigger;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Controller_Right_Trigger".
        /// </summary>
        public InputAction @Controller_Right_Trigger => m_Wrapper.m_VPETMap_Controller_Right_Trigger;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Controller_Left_Shoulder".
        /// </summary>
        public InputAction @Controller_Left_Shoulder => m_Wrapper.m_VPETMap_Controller_Left_Shoulder;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Controller_Right_Shoulder".
        /// </summary>
        public InputAction @Controller_Right_Shoulder => m_Wrapper.m_VPETMap_Controller_Right_Shoulder;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Controller_Left_Stick".
        /// </summary>
        public InputAction @Controller_Left_Stick => m_Wrapper.m_VPETMap_Controller_Left_Stick;
        /// <summary>
        /// Provides access to the underlying input action "VPETMap/Controller_Right_Stick".
        /// </summary>
        public InputAction @Controller_Right_Stick => m_Wrapper.m_VPETMap_Controller_Right_Stick;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_VPETMap; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="VPETMapActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(VPETMapActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="VPETMapActions" />
        public void AddCallbacks(IVPETMapActions instance)
        {
            if (instance == null || m_Wrapper.m_VPETMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_VPETMapActionsCallbackInterfaces.Add(instance);
            @Navigate.started += instance.OnNavigate;
            @Navigate.performed += instance.OnNavigate;
            @Navigate.canceled += instance.OnNavigate;
            @MiddleClick.started += instance.OnMiddleClick;
            @MiddleClick.performed += instance.OnMiddleClick;
            @MiddleClick.canceled += instance.OnMiddleClick;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
            @Position.started += instance.OnPosition;
            @Position.performed += instance.OnPosition;
            @Position.canceled += instance.OnPosition;
            @Click.started += instance.OnClick;
            @Click.performed += instance.OnClick;
            @Click.canceled += instance.OnClick;
            @Tap.started += instance.OnTap;
            @Tap.performed += instance.OnTap;
            @Tap.canceled += instance.OnTap;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @OrbitClick.started += instance.OnOrbitClick;
            @OrbitClick.performed += instance.OnOrbitClick;
            @OrbitClick.canceled += instance.OnOrbitClick;
            @DragClick.started += instance.OnDragClick;
            @DragClick.performed += instance.OnDragClick;
            @DragClick.canceled += instance.OnDragClick;
            @ZoomWheel.started += instance.OnZoomWheel;
            @ZoomWheel.performed += instance.OnZoomWheel;
            @ZoomWheel.canceled += instance.OnZoomWheel;
            @Controller_North.started += instance.OnController_North;
            @Controller_North.performed += instance.OnController_North;
            @Controller_North.canceled += instance.OnController_North;
            @Controller_South.started += instance.OnController_South;
            @Controller_South.performed += instance.OnController_South;
            @Controller_South.canceled += instance.OnController_South;
            @Controller_East.started += instance.OnController_East;
            @Controller_East.performed += instance.OnController_East;
            @Controller_East.canceled += instance.OnController_East;
            @Controller_West.started += instance.OnController_West;
            @Controller_West.performed += instance.OnController_West;
            @Controller_West.canceled += instance.OnController_West;
            @Controller_Up.started += instance.OnController_Up;
            @Controller_Up.performed += instance.OnController_Up;
            @Controller_Up.canceled += instance.OnController_Up;
            @Controller_Down.started += instance.OnController_Down;
            @Controller_Down.performed += instance.OnController_Down;
            @Controller_Down.canceled += instance.OnController_Down;
            @Controller_Left.started += instance.OnController_Left;
            @Controller_Left.performed += instance.OnController_Left;
            @Controller_Left.canceled += instance.OnController_Left;
            @Controller_Right.started += instance.OnController_Right;
            @Controller_Right.performed += instance.OnController_Right;
            @Controller_Right.canceled += instance.OnController_Right;
            @Controller_Left_Trigger.started += instance.OnController_Left_Trigger;
            @Controller_Left_Trigger.performed += instance.OnController_Left_Trigger;
            @Controller_Left_Trigger.canceled += instance.OnController_Left_Trigger;
            @Controller_Right_Trigger.started += instance.OnController_Right_Trigger;
            @Controller_Right_Trigger.performed += instance.OnController_Right_Trigger;
            @Controller_Right_Trigger.canceled += instance.OnController_Right_Trigger;
            @Controller_Left_Shoulder.started += instance.OnController_Left_Shoulder;
            @Controller_Left_Shoulder.performed += instance.OnController_Left_Shoulder;
            @Controller_Left_Shoulder.canceled += instance.OnController_Left_Shoulder;
            @Controller_Right_Shoulder.started += instance.OnController_Right_Shoulder;
            @Controller_Right_Shoulder.performed += instance.OnController_Right_Shoulder;
            @Controller_Right_Shoulder.canceled += instance.OnController_Right_Shoulder;
            @Controller_Left_Stick.started += instance.OnController_Left_Stick;
            @Controller_Left_Stick.performed += instance.OnController_Left_Stick;
            @Controller_Left_Stick.canceled += instance.OnController_Left_Stick;
            @Controller_Right_Stick.started += instance.OnController_Right_Stick;
            @Controller_Right_Stick.performed += instance.OnController_Right_Stick;
            @Controller_Right_Stick.canceled += instance.OnController_Right_Stick;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="VPETMapActions" />
        private void UnregisterCallbacks(IVPETMapActions instance)
        {
            @Navigate.started -= instance.OnNavigate;
            @Navigate.performed -= instance.OnNavigate;
            @Navigate.canceled -= instance.OnNavigate;
            @MiddleClick.started -= instance.OnMiddleClick;
            @MiddleClick.performed -= instance.OnMiddleClick;
            @MiddleClick.canceled -= instance.OnMiddleClick;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
            @Position.started -= instance.OnPosition;
            @Position.performed -= instance.OnPosition;
            @Position.canceled -= instance.OnPosition;
            @Click.started -= instance.OnClick;
            @Click.performed -= instance.OnClick;
            @Click.canceled -= instance.OnClick;
            @Tap.started -= instance.OnTap;
            @Tap.performed -= instance.OnTap;
            @Tap.canceled -= instance.OnTap;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @OrbitClick.started -= instance.OnOrbitClick;
            @OrbitClick.performed -= instance.OnOrbitClick;
            @OrbitClick.canceled -= instance.OnOrbitClick;
            @DragClick.started -= instance.OnDragClick;
            @DragClick.performed -= instance.OnDragClick;
            @DragClick.canceled -= instance.OnDragClick;
            @ZoomWheel.started -= instance.OnZoomWheel;
            @ZoomWheel.performed -= instance.OnZoomWheel;
            @ZoomWheel.canceled -= instance.OnZoomWheel;
            @Controller_North.started -= instance.OnController_North;
            @Controller_North.performed -= instance.OnController_North;
            @Controller_North.canceled -= instance.OnController_North;
            @Controller_South.started -= instance.OnController_South;
            @Controller_South.performed -= instance.OnController_South;
            @Controller_South.canceled -= instance.OnController_South;
            @Controller_East.started -= instance.OnController_East;
            @Controller_East.performed -= instance.OnController_East;
            @Controller_East.canceled -= instance.OnController_East;
            @Controller_West.started -= instance.OnController_West;
            @Controller_West.performed -= instance.OnController_West;
            @Controller_West.canceled -= instance.OnController_West;
            @Controller_Up.started -= instance.OnController_Up;
            @Controller_Up.performed -= instance.OnController_Up;
            @Controller_Up.canceled -= instance.OnController_Up;
            @Controller_Down.started -= instance.OnController_Down;
            @Controller_Down.performed -= instance.OnController_Down;
            @Controller_Down.canceled -= instance.OnController_Down;
            @Controller_Left.started -= instance.OnController_Left;
            @Controller_Left.performed -= instance.OnController_Left;
            @Controller_Left.canceled -= instance.OnController_Left;
            @Controller_Right.started -= instance.OnController_Right;
            @Controller_Right.performed -= instance.OnController_Right;
            @Controller_Right.canceled -= instance.OnController_Right;
            @Controller_Left_Trigger.started -= instance.OnController_Left_Trigger;
            @Controller_Left_Trigger.performed -= instance.OnController_Left_Trigger;
            @Controller_Left_Trigger.canceled -= instance.OnController_Left_Trigger;
            @Controller_Right_Trigger.started -= instance.OnController_Right_Trigger;
            @Controller_Right_Trigger.performed -= instance.OnController_Right_Trigger;
            @Controller_Right_Trigger.canceled -= instance.OnController_Right_Trigger;
            @Controller_Left_Shoulder.started -= instance.OnController_Left_Shoulder;
            @Controller_Left_Shoulder.performed -= instance.OnController_Left_Shoulder;
            @Controller_Left_Shoulder.canceled -= instance.OnController_Left_Shoulder;
            @Controller_Right_Shoulder.started -= instance.OnController_Right_Shoulder;
            @Controller_Right_Shoulder.performed -= instance.OnController_Right_Shoulder;
            @Controller_Right_Shoulder.canceled -= instance.OnController_Right_Shoulder;
            @Controller_Left_Stick.started -= instance.OnController_Left_Stick;
            @Controller_Left_Stick.performed -= instance.OnController_Left_Stick;
            @Controller_Left_Stick.canceled -= instance.OnController_Left_Stick;
            @Controller_Right_Stick.started -= instance.OnController_Right_Stick;
            @Controller_Right_Stick.performed -= instance.OnController_Right_Stick;
            @Controller_Right_Stick.canceled -= instance.OnController_Right_Stick;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="VPETMapActions.UnregisterCallbacks(IVPETMapActions)" />.
        /// </summary>
        /// <seealso cref="VPETMapActions.UnregisterCallbacks(IVPETMapActions)" />
        public void RemoveCallbacks(IVPETMapActions instance)
        {
            if (m_Wrapper.m_VPETMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="VPETMapActions.AddCallbacks(IVPETMapActions)" />
        /// <seealso cref="VPETMapActions.RemoveCallbacks(IVPETMapActions)" />
        /// <seealso cref="VPETMapActions.UnregisterCallbacks(IVPETMapActions)" />
        public void SetCallbacks(IVPETMapActions instance)
        {
            foreach (var item in m_Wrapper.m_VPETMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_VPETMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="VPETMapActions" /> instance referencing this action map.
    /// </summary>
    public VPETMapActions @VPETMap => new VPETMapActions(this);
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "VPETMap" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="VPETMapActions.AddCallbacks(IVPETMapActions)" />
    /// <seealso cref="VPETMapActions.RemoveCallbacks(IVPETMapActions)" />
    public interface IVPETMapActions
    {
        /// <summary>
        /// Method invoked when associated input action "Navigate" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnNavigate(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "MiddleClick" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnMiddleClick(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "RightClick" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnRightClick(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Position" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPosition(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Click" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnClick(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Tap" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnTap(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Look" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnLook(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "OrbitClick" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnOrbitClick(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "DragClick" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnDragClick(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "ZoomWheel" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnZoomWheel(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_North" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_North(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_South" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_South(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_East" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_East(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_West" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_West(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_Up" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_Up(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_Down" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_Down(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_Left" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_Left(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_Right" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_Right(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_Left_Trigger" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_Left_Trigger(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_Right_Trigger" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_Right_Trigger(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_Left_Shoulder" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_Left_Shoulder(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_Right_Shoulder" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_Right_Shoulder(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_Left_Stick" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_Left_Stick(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Controller_Right_Stick" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnController_Right_Stick(InputAction.CallbackContext context);
    }
}
